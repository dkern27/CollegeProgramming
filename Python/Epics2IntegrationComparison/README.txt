
EPICS 269 Project

Numerical Integration with Noise

Blake Shiparski
Jordan Schmerge
Dylan Kern
Robin Coleman
Harry Krantz

Last Modified: 11/29/14



Introduction:
	This program has two main functions; remove noise and integrate sets of discrete data points. The program is written in Python 2 and relies upon Tkinter for the graphical interface. 



Terminology:
	Toolbar - The toolbar is located on the left-side of the window and has buttons for all the controls and features of the program

	Graphing Space - The graphing space is to the right of the toolbar and makes-up the rest of the window. Graphs generated by the program will be displayed here. Note the graphing space will automatically scale to the size of the displayed graphs.

	Data-Layer - Used to refer to a set of data points as well as a visual graph of the data.



Instructions:
	The program is launched by running the main.py file. This will open a new window with an empty graphing space. At the bottom of the toolbar are buttons for “Reset” and “Quit”; at any time the user can safely quit the program or reset the program, which will reinitialize the program as if just opened.

	From the toolbar the user can either import their own data in the form of a .txt file or use one of the available simulated data sets. Imported data must be in a .txt file and data points organized into two columns. Any non-numerical data in the file will be automatically ignored. 
	
	Once a data set is added/selected a new data-layer will be created and represented by a line with a check-box in the toolbar. The check-box will toggle the visibility of the graph for the data-layer. A new data-set can be added at any time during the use of the program.

	Now the user can select various data manipulation methods from the toolbar. Adding a given manipulation method will create new data-layer(s) building upon the most recently selected data-layer. That-is the most recently toggled-on data-layer, not the most recently created. Any combination of methods can be created. 

	When finished manipulating the data the user can export either the calculated data and/or a graph. When exporting data points, the most recently selected data-layer will be saved as a .txt file. When exporting a graph, a .pdf of the current set of graphs visible will be saved.



Known Issues:
	The “Random-Spike” method adds a random spike to the most recently selected data layer, and the second most recently selected data layer.

	When run on a computer with a smaller screen-size, the program may be limited in use due the the toolbar being too large not allowing enough screen real-estate to display added data-layers.

	On some systems, the Pylab Backend will need to be set for “Inline(SVG)” use.
	
